/// <reference types="react" />
import { ContactShadowsProps } from './ContactShadows';
import { AccumulativeShadowsProps } from './AccumulativeShadows';
import { PresetsType } from '../helpers/environment-assets';
declare const presets: {
    rembrandt: {
        main: number[];
        fill: number[];
    };
    portrait: {
        main: number[];
        fill: number[];
    };
    upfront: {
        main: number[];
        fill: number[];
    };
    soft: {
        main: number[];
        fill: number[];
    };
};
declare type StageShadows = Partial<AccumulativeShadowsProps> & Partial<ContactShadowsProps> & {
    type: 'contact' | 'accumulative';
    offset?: number;
    bias?: number;
    size?: number;
};
declare type StageProps = JSX.IntrinsicElements['group'] & {
    preset?: keyof typeof presets;
    shadows?: boolean | 'contact' | 'accumulative' | StageShadows;
    adjustCamera?: boolean | number;
    environment?: PresetsType | null;
    intensity?: number;
};
export declare function Stage({ children, adjustCamera, intensity, shadows, environment, preset, ...props }: StageProps): JSX.Element;
export {};
